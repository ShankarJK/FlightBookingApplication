@startuml ClassDiagram

!define POSITIVERESPONSE 90EE90

!define NEGATIVEERESPONSE EFBBBB

!define NUETRALRESPONSE F2DC79

skinparam sequence{
    ParticipantBackgroundColor #A7BEAE
    LifeLineBackgroundColor #E7E8D1
    LifeLineBorderColor #2C5F2D
    ActorBackgroundColor #FC766AFF
    ActorBorderColor #FC766AFF
    ArrowColor #B85042
    ArrowFontColor #234E70
}

title "MyBookingScreen-ClassDiagram"

package Pages{
    package MyBookingScreen{
        class MyBookingScreenModel{      
            +flightBookingService : IFlightBookingService
            +@statusCode : int
            +@pageTitle: String
            +@listOfBookings : List<PassengerBO>
            +@tempListOfBookings  : List<PassengerBO>
            +@isLoading : Bool
            +@daysLeft: int
        }
        class MyBookingScreenVM{
            +goBackToHome(): void
            +sortBookings() : void
            +fetchbookings() : Future<void>
            +returnRemainingDays() : int
        }
        class MyBookingScreen{
            - _instanceOfVM : MyBookingScreenVM
            + initState() : void
            + dispose() : void
        }
    }
}


MyBookingScreenVM --> MyBookingScreenModel :extends
MyBookingScreen --> MyBookingScreenVM :uses

package BOs{
    package PassengerBO{
        class PassengerBO{

        }
        class PassengerBOExtension{
            +sortBookingsByDate(ListofBookings: List<PassengerBO> ): List<PassengerBO>
              +checkRemainingDays():int
        }
    }
}

package Services{
    package FlightBookingService{
        interface IFlightBookingService{
            +fetchBookingDetails(): Future<ServiceResult<List<PassengerBO>>>
        }
    }
}


PassengerBOExtension --> PassengerBO

MyBookingScreenVM --> PassengerBOExtension: uses
MyBookingScreenVM -> PassengerBO: uses
MyBookingScreenVM -->IFlightBookingService: uses

